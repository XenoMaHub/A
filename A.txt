print("Excute")
repeat wait() until game:IsLoaded()
if game.GameId ~= 994732206 then return end

print("Loading Function")

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Character = LocalPlayer.Character
local Humanoid = Character.Humanoid
local QuestC = LocalPlayer.PlayerGui.Main.Quest
local RootPart = Character.HumanoidRootPart

local LoadFuncs = {}

local Module = {
	AttackCooldown = tick()
}
local CachedChars = {}


local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/Jxereas/UI-Libraries/main/notification_gui_library.lua",true))()
local notif1 = Notification.new("success", "Attack X Hub New Projects", "Script Success ...")
wait(4)
notif1:delete()
local notif2 = Notification.new("info", "Welcome To Atlas ", "Thank you for using our camp script.")
wait(4)
notif1:delete()



if game.PlaceId == 2753915549 then
	World1 = true
elseif game.PlaceId == 4442272183 then
	World2 = true
elseif game.PlaceId == 7449423635 then
	World3 = true
end

local function QuestCheck()
	local Lvl = game:GetService("Players").LocalPlayer.Data.Level.Value
	if Lvl >= 1 and Lvl <= 9 then
		if tostring(game.Players.LocalPlayer.Team) == "Marines" then
			MobName = "Trainee"
			QuestName = "MarineQuest"
			QuestLevel = 1
			Mon = "Trainee"
			NPCPosition = CFrame.new(-2709, 24, 2104)
		elseif tostring(game.Players.LocalPlayer.Team) == "Pirates" then
			MobName = "Bandit"
			Mon = "Bandit"
			QuestName = "BanditQuest1"
			QuestLevel = 1
			NPCPosition = CFrame.new(1059, 16, 1549)
		end
		return {
			[1] = QuestLevel,
			[2] = NPCPosition,
			[3] = MobName,
			[4] = QuestName,
			[5] = LevelRequire,
			[6] = Mon,
		}
	end

	if Lvl >= 375 and Lvl <= 399 then -- Fishman Warrior
		MobName = "Fishman Warrior"
		QuestName = "FishmanQuest"
		QuestLevel = 1
		Mon = "Fishman Warrior"
		NPCPosition = CFrame.new(61122, 18, 1568)
		if _G['Auto Farm Level'] and (NPCPosition.Position - RootPart.Position).Magnitude > 3000 then
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(61163, 11, 1819))
		end
		return {
			[1] = QuestLevel,
			[2] = NPCPosition,
			[3] = MobName,
			[4] = QuestName,
			[5] = LevelRequire,
			[6] = Mon,
		}
	end

	if Lvl >= 15 and Lvl <= 29 then
		MobName = "Gorilla"
		QuestName = "JungleQuest"
		QuestLevel = 2
		Mon = "Gorilla"
		NPCPosition = CFrame.new(-1604, 36, 154)
		return {
			[1] = QuestLevel,
			[2] = NPCPosition,
			[3] = MobName,
			[4] = QuestName,
			[5] = LevelRequire,
			[6] = Mon,
		}
	end
	if Lvl >= 400 and Lvl <= 449 then -- Fishman Commando
		MobName = "Fishman Commando"
		QuestName = "FishmanQuest"
		QuestLevel = 2
		Mon = "Fishman Commando"
		NPCPosition = CFrame.new(61122, 18, 1568)
		if _G['Auto Farm Level'] and (NPCPosition.Position - RootPart.Position).Magnitude > 3000 then
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(61163, 11, 1819))
		end
		return {
			[1] = QuestLevel,
			[2] = NPCPosition,
			[3] = MobName,
			[4] = QuestName,
			[5] = LevelRequire,
			[6] = Mon,
		}
	end

	--game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(61163.8515625, 11.6796875, 1819.7841796875))
	local GuideModule = require(game:GetService("ReplicatedStorage").GuideModule)
	local Quests = require(game:GetService("ReplicatedStorage").Quests)
	for i,v in pairs(GuideModule["Data"]["NPCList"]) do
		for i1,v1 in pairs(v["Levels"]) do
			if Lvl >= v1 then
				if not LevelRequire then
					LevelRequire = 0
				end
				if v1 > LevelRequire then
					NPCPosition = i["CFrame"]
					QuestLevel = i1
					LevelRequire = v1
				end
				if #v["Levels"] == 3 and QuestLevel == 3 then
					NPCPosition = i["CFrame"]
					QuestLevel = 2
					LevelRequire = v["Levels"][2]
				end
			end
		end
	end
	for i,v in pairs(Quests) do
		for i1,v1 in pairs(v) do
			if v1["LevelReq"] == LevelRequire and i ~= "CitizenQuest" then
				QuestName = i
				for i2,v2 in pairs(v1["Task"]) do
					MobName = i2
					Mon = string.split(i2," [Lv. ".. v1["LevelReq"] .. "]")[1]
				end
			end
		end
	end
	if QuestName == "MarineQuest2" then
		QuestName = "MarineQuest2"
		QuestLevel = 1
		MobName = "Chief Petty Officer"
		Mon = "Chief Petty Officer"
		LevelRequire = 120
	elseif QuestName == "ImpelQuest" then
		QuestName = "PrisonerQuest"
		QuestLevel = 2
		MobName = "Dangerous Prisoner"
		Mon = "Dangerous Prisoner"
		LevelRequire = 210
		NPCPosition = CFrame.new(5310, 0, 474)
	elseif QuestName == "SkyExp1Quest" then
		if QuestLevel == 1 then
			NPCPosition = CFrame.new(-4721, 843, -1949)
		elseif QuestLevel == 2 then
			NPCPosition = CFrame.new(-7859, 5544, -381)
		end
	elseif QuestName == "Area2Quest" and QuestLevel == 2 then
		QuestName = "Area2Quest"
		QuestLevel = 1
		MobName = "Swan Pirate"
		Mon = "Swan Pirate"
		LevelRequire = 775
	end
	MobName = MobName:sub(1,#MobName)
	if not MobName:find("Lv") then
		for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
			local MonLV = string.match(v.Name, "%d+")
			if MonLV and v.Name:find(MobName) and #v.Name > #MobName then
				if tonumber(MonLV) <= Lvl + 50 then
					MobName = v.Name
				end
			end
		end
	end
	if not MobName:find("Lv") then
		for i,v in pairs(game:GetService("ReplicatedStorage"):GetChildren()) do
			local MonLV = string.match(v.Name, "%d+")
			if MonLV and v.Name:find(MobName) and #v.Name > #MobName then
				if tonumber(MonLV) <= Lvl + 50 then
					MobName = v.Name
				end
			end
		end
	end

	return {
		[1] = QuestLevel,
		[2] = NPCPosition,
		[3] = MobName,
		[4] = QuestName,
		[5] = LevelRequire,
		[6] = Mon,
	}
end

LocalPlayer.CharacterAdded:Connect(function(newCharacter)
	Character = newCharacter
	RootPart = newCharacter:WaitForChild("HumanoidRootPart")
	Humanoid = newCharacter:WaitForChild("Humanoid")
end)


function Module.IsAlive(Char)
	if not Char then return nil end
	if CachedChars[Char] then return CachedChars[Char].Health > 0 end

	local Hum = Char:FindFirstChildOfClass("Humanoid")
	CachedChars[Char] = Hum
	return Hum and Hum.Health > 0
end

function Module.Attack(params,expression)
	targetMon = params.target
	local value = params.value
	local expression = expression or function() return true end
	local Human = targetMon.Humanoid
	local Success,Error = pcall(function()
		local FlyUp = nil
		local CS = 1
		local CSStart = tick()
		repeat
			local Tool = Character:FindFirstChildOfClass("Tool")
			local Step = { 
				Vector3.new(0,60,0), 
				Vector3.new(0,0,60), 
				Vector3.new(0,0,-60), 
				Vector3.new(60,0,0), 
				Vector3.new(-60,0,0), 
				Vector3.new(0,-60,0),
			}
			if tick() - CSStart > 0.2 then
				CSStart = tick()
				CS = CS + 1
				if CS > #Step then
					CS = 1
				end
			end
			if Tool and ((Tool.Name == "Black Leg" and Tool.Level.Value >= 150) or (Tool.Name == "Death Step" and Tool.Level.Value >= 400)) then
				game:GetService('VirtualInputManager'):SendKeyEvent(true, ("V"), false, game)
				game:GetService('VirtualInputManager'):SendKeyEvent(false, ("V"), false, game)
			end
			Teleport(params.target.HumanoidRootPart.CFrame * CFrame.new(0, 30, 0), function() return not value end)
			PosMon = params.target.HumanoidRootPart.CFrame
			Human.JumpPower = 0
			Human.WalkSpeed = 0
			Human.Sit = true			
			Human.RootPart.CanCollide = false
			Human:ChangeState(11)
			Character.Humanoid:ChangeState(11)
			EquipWeapon(_G.Select_Weapon)
			task.wait(0.02)
		until not targetMon.Parent or Human.Health <= 1 or expression()
	end)
	if not Success then warn("Attack Function Error : ",Error) end
end

function Teleport(Pos, expression)
	local expression = expression or function() return true end
	local r = game:GetService("Players").LocalPlayer
	local Tween_Service = game:GetService("TweenService")

	if not r.Character:FindFirstChild("Root") then
		local Part = Instance.new("Part", r.Character)
		Part.Name = "Root"
		Part.Size = Vector3.new(20, 0.5, 20)
		Part.Anchored = true
		Part.Transparency = 1
		Part.CanCollide = false
		Part.CFrame = r.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0.6, 0)
	end

	for _, v in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
		if v:IsA("BasePart") then
			v.CanCollide = false    
		end
	end
	if not RootPart:FindFirstChild("BodyClip") then
		local Noclip = Instance.new("BodyVelocity")
		Noclip.Name = "BodyClip"
		Noclip.Parent = RootPart
		Noclip.MaxForce = Vector3.new(100000,100000,100000)
		Noclip.Velocity = Vector3.new(0,0,0)
	end
	local distance = (Pos.Position - r.Character.HumanoidRootPart.Position).Magnitude
	local TweenPosition = (Pos.Position - r.Character.HumanoidRootPart.Position).Magnitude
	local Magnitude = TweenInfo.new(TweenPosition / 250, Enum.EasingStyle.Linear)

	if r.Character.Humanoid.Sit then
		r.Character.Humanoid.Sit = false
	end

	local targetPosition = CFrame.new(
		Pos.Position.X, r.Character["Root"].Position.Y, Pos.Position.Z
	)
	r.Character["Root"].Position = Vector3.new(
		r.Character["Root"].Position.X, Pos.Position.Y, r.Character["Root"].Position.Z
	)

	local tween = Tween_Service:Create(
		r.Character["Root"], Magnitude, {CFrame = targetPosition}
	)
	tween:Play()

	if distance <= 10 then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Pos
	end
	
	spawn(function()
		repeat task.wait(0.01)
			pcall(function()
				r.Character.HumanoidRootPart.CFrame = r.Character["Root"].CFrame
				if (r.Character["Root"].Position - r.Character.HumanoidRootPart.Position).Magnitude >= 1 then
					r.Character["Root"].CFrame = r.Character.HumanoidRootPart.CFrame
				end
			end)
		until expression() or (RootPart.Position - Pos.Position).Magnitude < 5
	end)
end

function StopTween(Expression)
	if not Expression then
		_G.StopTween = true
		wait()
		Character.Humanoid:ChangeState(14)
		Teleport(RootPart.CFrame)
		wait()
		if RootPart:FindFirstChild("BodyClip") then
			RootPart:FindFirstChild("BodyClip"):Destroy()
		end
		if Character:FindFirstChild("Root") then
			Character:FindFirstChild("Root"):Destroy()
		end
		_G.StopTween = false
	end
end
do

	function _getEnemiesByName(params)
		if not params or not params.target then
			warn("Invalid parameters passed to _getEnemiesByName")
			return nil, nil
		end

		local targetName = params.target
		local matchedEnemy = nil
		local matchedSpawn = nil

		for _, enemy in ipairs(workspace.Enemies:GetChildren()) do
			if (type(targetName) == "table" and table.find(targetName, enemy.Name)) or enemy.Name == targetName then
				if enemy:FindFirstChild("Humanoid") and enemy.Humanoid.Health > 0 and Module.IsAlive(enemy) then
					matchedEnemy = enemy
					break
				end
			end
		end

		for _, spawn in ipairs(workspace._WorldOrigin.EnemySpawns:GetChildren()) do
			if string.find(spawn.Name, type(targetName) == "table" and targetName[1] or targetName) and spawn:IsA("Part") then
				matchedSpawn = spawn.CFrame
				break
			end
		end

		return matchedEnemy, matchedSpawn
	end
	-- [ Select Weapon ] 
	function EquipWeapon(ToolSe)
		if LocalPlayer.Backpack:FindFirstChild(ToolSe) then
			Humanoid:EquipTool(LocalPlayer.Backpack:FindFirstChild(ToolSe))
		end
	end

	function _hasItem(name)
		if LocalPlayer.Backpack:FindFirstChild(name) then return true end
		if LocalPlayer.Character:FindFirstChild(name) then return true end
		for i,v in pairs(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getInventoryWeapons") or {}) do
			if v.Name == name then return v end
		end
	end

	function dist(a,b,noHeight)
		if not b then
			b = RootPart.Position
		end
		return (Vector3.new(a.X,not noHeight and a.Y,a.Z) - Vector3.new(b.X,not noHeight and b.Y,b.Z)).magnitude
	end


	function CreateF(World, target, condition, hasItem, position)
		if World ~= nil then
			if not World or not condition then return end
		end
		--if hasItem and Module._hasItem(hasItem) then
		--	if Notification then 
		--		local notif = Notification.new("info", "Script", "You have already obtained this item!") 
		--		task.wait(4) 
		--		notif:delete() 
		--	end
		--	return
		--end
		if not (RootPart or Character) then return end

		while condition do 
			task.wait(0.1)
			pcall(function()

				if _G['Auto Rengoku'] and Module._hasItem("Hidden Key") then
					Module.EquipWeapon("Hidden Key")
					Teleport(CFrame.new(6571, 299, -6967), function() return not condition end)
				end
				if _G['Auto Ectoplasm'] and dist(Vector3.new(923, 126, 32852), nil, true) > 2000 then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance", Vector3.new(923, 126, 32852))
				end
				if _G['Auto Cavander'] and dist(Vector3.new(5369, 22, -487), nil, true) > 2000 then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance", Vector3.new(5369, 22, -487))
				end
				local v, spawns = _getEnemiesByName({ target = target })
				if Module.IsAlive(v) then
					Module.Attack({
						target = v,
						value = condition,
						function() 
							return not condition or 
								(not RootPart and Character) or 
								Module._hasItem("Hidden Key") or 
								game:GetService("Workspace").Map.CakeLoaf.BigMirror.Other.Transparency == 0 or 
								game:GetService("Workspace").Enemies:FindFirstChild("Cake Prince")
						end
					})
				else
					local pos = position or spawns
					if pos then
						if (RootPart.Position - pos.Position).Magnitude > 2000 then
							BYpass(pos)
						else
							Teleport(pos, function() return not condition end)
						end
					else
						print("Both position and spawns are nil, cannot proceed")
					end
				end
				if _G['Auto Hallow Scythe'] and _hasItem("Hallow Essence") then
					firetouchinterest(Character.Head,workspace.Map["Haunted Castle"].Summoner.Detection,0)
					firetouchinterest(Character.Head,workspace.Map["Haunted Castle"].Summoner.Detection,1)
				end
			end)
			--if hasItem and Module._hasItem(hasItem) then break end
		end
	end	

	function CreateHighlight(parent)
		if not parent then
			warn("CreateHighlight: Parent is required.")
			return
		end

		if parent:FindFirstChild("Highlight") then
			return
		end

		local highlight = Instance.new("Highlight")

		highlight.FillColor = Color3.new(1, 0.203922, 0.321569)
		highlight.OutlineColor = Color3.new(1, 0.180392, 0.290196)
		highlight.FillTransparency = 0.99999
		highlight.Parent = parent
	end

end

function BYpass(p)
	if not _G['Bypass Tp'] then return end
	if not (_hasItem("God's Chalice") or _hasItem("Hallow Essence") or _hasItem("Sweet Chalice") or _hasItem("Fist of Darkness")) then 
		repeat wait()
			Character.Humanoid:ChangeState(14)
			RootPart.CFrame = p
			wait(.05)
			Character.Head:Destroy()
			RootPart.CFrame = p
		until (p.Position-RootPart.Position).Magnitude < 2000 and Humanoid.Health > 0
	end
end

_G.BringMonster = true
spawn(function()
	while task.wait() do
		pcall(function()
			if _G.BringMonster then
				for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
					if v.Name == targetMon.Name and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
						if (v.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 220 then
							v.HumanoidRootPart.CFrame = PosMon
							v.HumanoidRootPart.CanCollide = false
							v.Head.CanCollide = false
							if v.Humanoid:FindFirstChild("Animator") then
								v.Humanoid.Animator:Destroy()
							end
							CreateHighlight(v)
							sethiddenproperty(game:GetService("Players").LocalPlayer, "SimulationRadius", math.huge)
						elseif v:FindFirstChild("Highlight") then v.Highlight:Destroy() end
					end
				end
			end
		end)
	end
end)


do -- Module function

	LoadFuncs['Auto Farm Level'] = function(value)
		while value do wait(.1)
			if not value then return end
			local Level = LocalPlayer.Data.Level.Value
			local success, errorMsg = pcall(function()
				local questData = QuestCheck()
				if QuestC.Visible then 
					local v,spwans = _getEnemiesByName({ target = questData[3] })
					if Module.IsAlive(v) then
						if not string.find(QuestC.Container.QuestTitle.Title.Text, questData[3]) then
							game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AbandonQuest")
						else
							Module.Attack({ target = v, value = value,function() return not QuestC.Visible end})
						end
					else
						if Level == 30 or Level <= 39 then
							spwans = CFrame.new(-1103, 13, 3896)
						end
						Teleport(spwans * CFrame.new(0, 100, 0),function() return not value end)
					end
				else 
					if dist(questData[2].Position, nil, true) < 5 then
						local args = { [1] = "StartQuest", [2] = questData[4], [3] = questData[1]}
						game:GetService('ReplicatedStorage').Remotes.CommF_:InvokeServer(unpack(args))
					end
					if (RootPart.Position - questData[2].Position).Magnitude > 2000 then
						BYpass(questData[2])
					else
						Teleport(questData[2], function() return not value or dist(questData[2],nil , true) < 1 end)
					end
				end
			end)
		end
	end

	LoadFuncs['Auto Second Sea'] = function(value)
		if not World1 then return end
		while value do task.wait(.1)
			local Success,Error = pcall(function()
				local Level = LocalPlayer.Data.Level.Value
				if Level >= 700 and World1 then
					if game:GetService("Workspace").Map.Ice.Door.CanCollide == false and game:GetService("Workspace").Map.Ice.Door.Transparency == 1 then
						if _hasItem("Key") then
							EquipWeapon("Key")
							Teleport(CFrame.new(1347, 37, -1325), function() return not value or not _hasItem("Key") end)
						else
							Teleport(CFrame.new(4849, 5, 719), function() return not value or _hasItem("Key") end)
							wait(1.1)
							game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("DressrosaQuestProgress","Detective")
						end
					else
						local v = _getEnemiesByName({
							target = "Ice Admiral"
						})
						if Module.IsAlive(v) then
							Module.Attack({ target = v, value = value,function() return not value end})
						else
							game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelDressrosa")
						end
						if game:GetService("ReplicatedStorage"):FindFirstChild("Ice Admiral") then
							Teleport(game:GetService("ReplicatedStorage"):FindFirstChild("Ice Admiral").HumanoidRootPart.CFrame * CFrame.new(5,10,7),function() return end)
						end
					end
				end
			end)
			if not Success then
				warn("Unexpected Error Found! Please send this to Maruko#7128\n"..Error)
			end
		end
	end

	LoadFuncs['Auto Third Sea'] = function(value)
		if not World2 then return end
		while value do task.wait(.1)
			local Success,Error = pcall(function()
				local Level = LocalPlayer.Data.Level.Value
				if Level >= 1500 and World2 then
					if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BartiloQuestProgress", "Bartilo") == 3 then
						if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("GetUnlockables").FlamingoAccess ~= nil then
							if game:GetService("ReplicatedStorage").Remotes["CommF_"]:InvokeServer("ZQuestProgress", "Check") == 0 then
								local v, spwan = _getEnemiesByName({
									target = "rip_indra"
								})
								if Module.IsAlive(v) then
									Module.Attack({ target = v, value = value})
								else
									Teleport(spwan, function() return not value end)
								end
							elseif game:GetService("ReplicatedStorage").Remotes["CommF_"]:InvokeServer("ZQuestProgress", "Check") == 1 then
								_G['Auto Third Sea'] = false
							else
								game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelZou")
								local v, spwan = _getEnemiesByName({
									target = "Don Swan"
								})
								if Module.IsAlive(v) then
									Module.Attack({ target = v, value = value})
								else
									Teleport(CFrame.new(2207, 15, 883), function() return not value end)
								end
							end
						else
							local FruitPrice, FruitStore = {}, {}

							for _,v in next, game.ReplicatedStorage:WaitForChild("Remotes").CommF_:InvokeServer("GetFruits") do
								if v.Price >= 1000000 then  
									table.insert(FruitPrice, v.Name)
								end
							end
							for _,v in pairs(game:GetService("Workspace"):GetChildren()) do
								if v:IsA("Tool") and string.find(v.Name, "Fruit") then
									_G['Auto Farm Level'] = false
									if (v.Handle.CFrame.Position - RootPart.Position).Magnitude >= 3000 then
										BYpass(v.Handle.CFrame * CFrame.new(0,50,0))
										Teleport(v.Handle.CFrame)
									else
										Teleport(v.Handle.CFrame)
									end
								elseif not v:IsA("Tool") then
									game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Cousin", "Buy")
									wait(0.1)
								end
							end

							for _,v in pairs(game:GetService("ReplicatedStorage").Remotes["CommF_"]:InvokeServer("getInventoryFruits")) do
								for _,x in pairs(v) do
									if _ == "Name" then table.insert(FruitStore, x) end
								end
							end

							for _,y in pairs(FruitPrice) do
								for _,z in pairs(FruitStore) do
									if y == z and not game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("GetUnlockables").FlamingoAccess then
										game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", y)
									end
								end
							end
							local player = game.Players.LocalPlayer
							for _, tool in pairs(player.Backpack:GetDescendants()) do
								if tool:FindFirstChild("Fruit") then 
									if tool then
										EquipWeapon(tool.Name)
										wait(0.5)
										local comm = game:GetService("ReplicatedStorage").Remotes.CommF_
										comm:InvokeServer("TalkTrevor", "1")
										wait(0.5)
										comm:InvokeServer("TalkTrevor", "2")
										wait(0.5)
										comm:InvokeServer("TalkTrevor", "1")
										wait(0.5)
										comm:InvokeServer("TalkTrevor", "3")
									end	
								end
							end
						end
					else
						if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BartiloQuestProgress","Bartilo") == 0 then
							if QuestC.Visible == true then
								local v, spwan = _getEnemiesByName({
									target = "Swan Pirate"
								})
								if Module.IsAlive(v) then
									Module.Attack({ target = v, value = value})
									game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelZou")
								else
									Teleport(spwan, function() return not value end)
								end
							else
								Teleport(CFrame.new(-461, 72, 300),function() return not value or QuestC.Visible end)
								if (CFrame.new(-461, 72, 300).Position - RootPart.Position).Magnitude <= 1 then
									game:GetService('ReplicatedStorage').Remotes.CommF_:InvokeServer("StartQuest", "BartiloQuest", 1)
								end
							end
						elseif  game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BartiloQuestProgress","Bartilo") == 1 then
							local v, spwan = _getEnemiesByName({
								target = "Jeremy"
							})
							if Module.IsAlive(v) then
								Module.Attack({ target = v, value = value})
								game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelZou")
							else
								Teleport(spwan, function() return not value end)
							end
						elseif  game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BartiloQuestProgress","Bartilo") == 2 then
							Teleport(CFrame.new(-1830, 10, 1680),function() return not value or QuestC.Visible end)
							wait(0.7)
							RootPart.CFrame = workspace.Map.Dressrosa.BartiloPlates.Plate1.CFrame
							wait(0.7)
							RootPart.CFrame = workspace.Map.Dressrosa.BartiloPlates.Plate2.CFrame
							wait(0.7)
							RootPart.CFrame = workspace.Map.Dressrosa.BartiloPlates.Plate3.CFrame
							wait(0.7)
							RootPart.CFrame = workspace.Map.Dressrosa.BartiloPlates.Plate4.CFrame
							wait(0.7)
							RootPart.CFrame = workspace.Map.Dressrosa.BartiloPlates.Plate5.CFrame
							wait(0.7)
							RootPart.CFrame = workspace.Map.Dressrosa.BartiloPlates.Plate6.CFrame
							wait(0.7)
							RootPart.CFrame = workspace.Map.Dressrosa.BartiloPlates.Plate7.CFrame
							wait(0.7)
							RootPart.CFrame = workspace.Map.Dressrosa.BartiloPlates.Plate8.CFrame
							wait(0.7)
						end
					end
				end
			end)
			if not Success then
				warn("Unexpected Error Found! Please send this to Maruko#7128\n"..Error)
			end
		end
	end


	LoadFuncs['Auto Elite Hunter'] = function(value)
		if not World3 then return end
		while value do task.wait(.1)
			pcall(function()
				local questTitle = game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text
				local eliteCFrame = CFrame.new(-5418, 313, -2826)
				if QuestC.Visible then
					if string.find(questTitle,"Diablo") or string.find(questTitle,"Deandre") or string.find(questTitle,"Urban") then	
						local enemyNames = { "Diablo", "Deandre", "Urban" }
						local foundEnemy = false
						for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
							if table.find(enemyNames, v.Name) then
								if Module.IsAlive(v) then
									Module.Attack({ target = v, value = value,function() return not value end})
									foundEnemy = true
								end
							end
						end
						if not foundEnemy then
							for _, _enemy in ipairs(enemyNames) do
								foundEnemy = game:GetService("ReplicatedStorage"):FindFirstChild(_enemy)
								if foundEnemy then 
									Teleport(foundEnemy.HumanoidRootPart.CFrame * CFrame.new(2, 20, 2)) 
									break
								end
							end
						end
					end
				else
					if dist(eliteCFrame.Position, nil, false) < 2 then
						game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("EliteHunter")
					else
						if (RootPart.Position - eliteCFrame.Position).Magnitude > 2000 then BYpass(eliteCFrame) else
							Teleport(eliteCFrame, function() return not value or QuestC.Visible end)
						end
					end
				end
			end)
		end
	end

	LoadFuncs['Auto Cake Prince'] = function(value)
		if not World3 then return end
		while value and task.wait(0.1) do
			pcall(function()
				local nearestEnemy, spwan = _getEnemiesByName({ target = 'Cake Prince' })
				if string.find(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CakePrinceSpawner"), 
					"Do you want to open the portal now?") 
				then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CakePrinceSpawner")
				end
				if game:GetService("Workspace").Enemies:FindFirstChild("Cake Prince") then
					if Module.IsAlive(nearestEnemy) then
						Module.Attack({ target = nearestEnemy, value = value})
					else
						Teleport(spwan,function() return not value end)
					end
				else
					local enemyNames = {
						"Cookie Crafter",
						"Cake Guard",
						"Baking Staff",
						"Head Baker"
					}
					local enemyFound = false
					local v = _getEnemiesByName({ target = enemyNames })
					if Module.IsAlive(v) then
						Module.Attack({ target = v, value = value},function() 
							return 	game:GetService("Workspace").Map.CakeLoaf.BigMirror.Other.Transparency == 0 or 
								game:GetService("Workspace").Enemies:FindFirstChild("Cake Prince")
						end)
						enemyFound = true
					end
					if not enemyFound then
						if (RootPart.Position - CFrame.new(-2077, 252, -12373).Position).Magnitude > 2000 then
							BYpass(CFrame.new(-2077, 252, -12373))
						else
							Teleport(CFrame.new(-2077, 252, -12373), function() return not value end)
						end
					end
				end
			end)
		end
	end

	LoadFuncs['Auto Mob Aura'] = function(value)
		while value do task.wait(.1) 
			if not value then return end
			local success, errorMsg = pcall(function()
				for i,enemy in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
					if (enemy.HumanoidRootPart.Position - RootPart.Position).Magnitude <= 1000 then
						if Module.IsAlive(enemy) then
							Module.Attack({ target = enemy, value = value})
							break
						end
					end
				end
			end)
			if not success then
				warn("Error occurred in Auto Mob Aura: " .. tostring(errorMsg))
			end
		end
	end

	-- Assigning LoadFuncs
	LoadFuncs['Auto Farm Boss'] = function(condition) CreateF(nil,  _G['Select Boss'], condition, nil, game:GetService("ReplicatedStorage")[_G['Select Boss']].HumanoidRootPart.CFrame) end

	
	LoadFuncs['Auto Pole V1'] = function(condition) CreateF(World1, "Thunder God", condition, "Pole (1st Form") end
	LoadFuncs['Auto Cannon'] = function(condition) CreateF(World1, "Wysper", condition, "Cannon") end
	LoadFuncs['Auto Bizento V2'] = function(condition) CreateF(World1, "Greybeard", condition, nil, CFrame.new(-4914, 50, 4281)) end

	-- World 2
	LoadFuncs['Auto Dragon Trident'] = function(condition) CreateF(World2, "Tide Keeper", condition, "Dragon Trident") end
	LoadFuncs['Auto Rengoku'] = function(condition) CreateF(World2, { "Snow Lurker", "Arctic Warrior", "Awakened Ice Admiral" }, condition, nil, CFrame.new(5439, 84, -6715)) end

	print( _G['Auto Rengoku'] )

	LoadFuncs['Auto Dark Coat'] = function(condition) CreateF(World2, "Darkbeard", condition, "Dark Coat") end
	LoadFuncs['Auto Swan Glasses'] = function(condition) CreateF(World2, "Don Swan", condition, "Swan Glasses") end
	LoadFuncs['Auto Ectoplasm'] = function(condition) CreateF(World2, { "Ship Deckhand", "Ship Engineer", "Ship Steward","Ship Officer","Arctic Warrior" }, _G['Auto Ectoplasm'], nil, nil) end

	-- World 3
	LoadFuncs['Auto Bone'] = function(condition) CreateF(World3, {'Reborn Skeleton','Living Zombie','Demonic Soul','Posessed Mummy'}, condition, nil, CFrame.new(-9504, 172, 6057)) end

	LoadFuncs['Auto Dark Dagger'] = function(condition) CreateF(World3, "rip_indra True Form", condition, "Dark Dagger",CFrame.new(-5344, 423, -2725)) end
	LoadFuncs['Auto Buddy'] = function(condition) CreateF(World3, "Cake Queen", condition, "Buddy Sword",CFrame.new(-776, 381, -11046)) end
	LoadFuncs['Auto Cavander'] = function(condition) CreateF(World3, "Beautiful Pirate", condition, "Canvander") end
	LoadFuncs['Auto Hallow Scythe'] = function(condition) CreateF(World3, "Soul Reaper", condition, "Hallow Scythe",CFrame.new(-8932, 146, 6062)) end

	LoadFuncs['Auto Tushita'] = function(condition)
		CreateF(World3, "Longma", condition, "Tushita",nil, function()
			if game:GetService("Workspace").Map.Turtle.TushitaGate:GetChildren()[2].Transparency == 0 then return end
			return true
		end)
	end

	LoadFuncs['Auto Twin hook'] = function(condition) CreateF(World3, "Captain Elephant", condition, "Captain Elephant",CFrame.new(-13348, 405, -8570)) end
	LoadFuncs['Island Empress'] = function(condition) CreateF(World3, "Hydra Leader", condition, "Venom Bow", CFrame.new(5801, 1079, -61)) end

end

local AtlasHub = Instance.new("ScreenGui")
AtlasHub.Name = "AtlasHub"
AtlasHub.Parent = game.CoreGui
AtlasHub.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local ImageButton = Instance.new("ImageButton")
ImageButton.Name = "AtlasHub Button"
ImageButton.Parent = AtlasHub
ImageButton.Position = UDim2.new(0.120833337, 0, 0.0952890813, 0)
ImageButton.Size = UDim2.new(0, 45, 0, 45)
ImageButton.Image = "rbxassetid://90229952901866"

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 5)
UICorner.Parent = ImageButton

local dragging = false
local dragInput, dragStart, startPos

local function updateDrag(input)
	local delta = input.Position - dragStart
	ImageButton.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

ImageButton.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = ImageButton.Position
		input.Changed:Connect(function()
			if dragging then
				updateDrag(input)
			end
		end)
	end
end)

ImageButton.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = false
	end
end)

ImageButton.MouseButton1Click:Connect(function()
	game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.RightControl, false, game)
	game:GetService("VirtualInputManager"):SendKeyEvent(false, Enum.KeyCode.RightControl, false, game)
end)

------------------------------------------------------------------------------------------------------------------------------
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Marukulaes/AtlasHub/refs/heads/main/LinoriaLib-main/Library.lua"))()
local ThemeManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/Marukulaes/AtlasHub/refs/heads/main/LinoriaLib-main/addons/ThemeManager.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/Marukulaes/AtlasHub/refs/heads/main/LinoriaLib-main/addons/SaveManager.lua"))()

Library:SetWatermarkVisibility(true)

function setwatermarktime()
	local dgt = math.floor(workspace.DistributedGameTime+0.27322)
	local hr = math.floor(dgt/(60^2))%24
	local min = math.floor(dgt/(60^1))%60
	local sec = math.floor(dgt/(60^0))%60
	Library:SetWatermark("Atlas Hub | "..hr.." Hour(hr) "..min.." Minute(m) "..sec.." Second(s)")
end

spawn(function()
	while task.wait(0) do 
		pcall(function() setwatermarktime()  end) 
	end 
end)

------------------------------------------------------------------------------------------------------------------------------

Window = Library:CreateWindow({ Title = 'Atlas Hub - Meta Script '..os.date('%A, %B %d %Y'), Center = true,  AutoShow = true, })

task.spawn(function()
	while task.wait() do
		Library:AttemptSave()
		Window:SetWindowTitle("Atlas Hub - Meta Script  - "..os.date('%A, %B %d %Y at %H:%M:%S'))
	end
end)

local Tabs = { 
	['General'] = Window:AddTab('General'), 
	['Teleport'] = Window:AddTab('Teleport'), 
	['Shop'] = Window:AddTab('Shop'), 
	['Misc'] = Window:AddTab('Misc'), 
	['UI Settings'] = Window:AddTab('UI Settings'),
}

local LeftGroupBox = Tabs['General']:AddLeftGroupbox('Groupbox')
local RightGroupBox = Tabs['General']:AddRightGroupbox('Groupbox')

local LeftGroupBox_Teleport = Tabs['Teleport']:AddLeftGroupbox('Groupbox')
local RightGroupBox_Teleport = Tabs['Teleport']:AddRightGroupbox('Groupbox')

local LeftGroupBox_Shop = Tabs['Shop']:AddLeftGroupbox('Shop')
local RightGroupBox_Shop = Tabs['Shop']:AddRightGroupbox('Shop')

local LeftGroupBox_Misc = Tabs['Misc']:AddLeftGroupbox('Server And Fps')

local function AddToggle(Section, Title, Description, SettingName, CallBack, StopTween1)
	local StopTween1 = StopTween1 or false
	local tasks

	if type(CallBack) == 'string' then
		if not SettingName then SettingName = CallBack end
		CallBack = nil
	end
	if not SettingName then SettingName = Title end

	return Section:AddToggle(SettingName, {
		Text = Title,
		Default = _G[SettingName] or false,
		Tooltip = Description,
		Callback = CallBack or function(Value)
			_G[SettingName] = Value
			if (not Value) and tasks then task.cancel(tasks) end
			tasks = task.spawn(function()  
				if LoadFuncs[SettingName] ~= nil then  
					LoadFuncs[SettingName](_G[SettingName])
					if StopTween1 then
						StopTween(_G[SettingName])
					end
				end
			end)
		end
	})
end

local function AddButton(Section, Title, params, CallBack)
	local callback = CallBack or function() end
	local content = params.Content or "Are you sure you want to proceed?"
	return Section:AddButton({ Text = Title, Func = CallBack, DoubleClick = false, Tooltip = content })
end

local Players = game:GetService("Players")
local VirtualInputManager = game:GetService("VirtualInputManager")
local camera = workspace.CurrentCamera

local isTargetFound = false

local function clickAtPosition(worldPosition)
	local screenPosition = camera:WorldToScreenPoint(worldPosition)
	pcall(function()
		VirtualInputManager:SendMouseButtonEvent(screenPosition.X, screenPosition.Y, 0, true, game, 0)
		VirtualInputManager:SendMouseButtonEvent(screenPosition.X, screenPosition.Y, 0, false, game, 0)
	end)
end

function CheckGunPlayer()
	for _, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
		if v.Name == "Dual Flintlock" then
			if not v:GetAttribute("IsAutoShooting") then
				v:SetAttribute("IsAutoShooting", true)
			end
			if v:FindFirstChild("LocalShotsLeft") then
				v.LocalShotsLeft = math.huge
			end
			if v:FindFirstChild("LocalTotalShots") then
				v.LocalTotalShots = -math.huge
			end
		end
	end
end
------------------------------------------------------------------------------------------------------------------------------
do -- LeftGroupBox  Tabs['General']

	AddToggle(LeftGroupBox, "Auto Farm Level", "Automatically farms levels by defeating enemies and gaining experience.", "Auto Farm Level", nil, true) -- Success
	AddToggle(LeftGroupBox, "Auto Mob Aura", "Automatically activates a mob aura that damages nearby enemies.", "Auto Mob Aura", nil, true) -- Success


	LeftGroupBox:AddLabel("New World")

	if World1 then
		AddToggle(LeftGroupBox, "Auto Second Sea", "Automatically unlocks the Second Sea for you to explore.", "Auto Second Sea", nil, true) -- Success
	end
	if World2 then
		AddToggle(LeftGroupBox,"Auto Third Sea","Auto Unlock ThirdSea","Auto Third Sea", nil, true)
	end

	local bossNames = {"The Gorilla King", "Bobby", "The Saw", "Yeti", "Mob Leader", "Vice Admiral", "Warden",
		"Chief Warden", "Swan", "Saber Expert", "Magma Admiral", "Fishman Lord", "Wysper", "Thunder God",
		"Cyborg", "Greybeard", "Diamond", "Jeremy", "Fajita", "Don Swan", "Smoke Admiral",
		"Awakened Ice Admiral", "Tide Keeper", "Order", "Darkbeard", "Cursed Captain", "Stone",
		"Island Empress", "Kilo Admiral", "Captain Elephant", "Beautiful Pirate", "Longma", "Cake Queen",
		"Soul Reaper", "Rip_Indra", "Cake Prince", "Dough King"}

	local BossTable = {}   

	local function UpdateBossTable()
		table.clear(BossTable)
		for _, bossName in pairs(bossNames) do
			if game:GetService("ReplicatedStorage"):FindFirstChild(bossName) then
				table.insert(BossTable, bossName)
			end
		end
	end
	UpdateBossTable()

	local SectionBoss = Tabs['General']:AddLeftGroupbox('Section Boss')

	local Select_Boss = SectionBoss:AddDropdown("Select Boss", {
		Text = "Select Boss",
		Values = BossTable,
		Multi = false,
		Default = BossTable[1],
		Callback = function(Value)
			_G['Select Boss'] = Value
		end
	})

	Select_Boss:OnChanged(function()
		_G['Select Boss'] = Select_Boss.Value
	end)

	task.spawn(function()
		while true do task.wait(5)
			UpdateBossTable()
			Select_Boss:SetValue(BossTable)
		end
	end)

	AddToggle(SectionBoss, "Auto Farm Boss", "Automatically farms bosses by attacking and defeating them for rewards.", "Auto Farm Boss", nil, true) -- Success
	
	if World1 then
		local SectionWorld1 = Tabs['General']:AddLeftGroupbox('Misc Of World 1')

		AddToggle(SectionWorld1, "Auto Saber", "Automatically farms the Saber sword by defeating enemies and completing required quests.", "Auto Saber", nil, true)   -- not finished yet
		AddToggle(SectionWorld1, "Auto Pole V1", "Automatically farms for the Pole V1 weapon by defeating specific enemies.", "Auto Pole V1", nil, true) -- Success
		AddToggle(SectionWorld1, "Auto Cannon", "Automatically farms for the Cannon by defeating enemies and gathering resources.", "Auto Cannon", nil,true)  -- Success
		AddToggle(SectionWorld1, "Auto Bizento V2", "Automatically farms the Bizento V2 weapon by defeating enemies.", "Auto Bizento V2", nil, true)  -- Success
	end
	-- World 2

	if World2 then
		local SectionWorld2 = Tabs['General']:AddLeftGroupbox('Misc Of World 2')

		AddToggle(SectionWorld2, "Auto True Triple Katana", "Automatically farms for the True Triple Katana by completing required tasks.", "Auto True Triple Katana",nil, true)

		LoadFuncs['Auto True Triple Katana'] = function(value)
			while value do task.wait(.1)
				game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("MysteriousMan", 2)
			end
		end

		AddToggle(SectionWorld2, "Auto Midnight Blade", "Automatically farms for the Midnight Blade by completing in-game challenges.", "Auto Midnight Blade", nil, true) -- Success
		AddToggle(SectionWorld2, "Auto Ectoplasm", "Automatically farms Ectoplasm by defeating required enemies and completing tasks.", "Auto Ectoplasm", nil, true)  -- Success
		AddToggle(SectionWorld2, "Auto Rengoku", "Automatically farms the Rengoku sword by completing quests and defeating bosses.", "Auto Rengoku", nil, true) -- Success
		AddToggle(SectionWorld2, "Auto Dark Coat", "Automatically farms the Dark Coat by completing quests and defeating bosses.", "Auto Dark Coat", nil, true) -- Success
		AddToggle(SectionWorld2, "Auto Kabucha", "Automatically farms for Kabucha by interacting with Blackbeard rewards.", "Auto Kabucha",nil, true)  -- Success

		LoadFuncs['Auto Kabucha'] = function(value)
			while value and not Module._hasItem("Kabuca") do task.wait(.1)
				game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward", "Slingshot", "1")
				game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward", "Slingshot", "2")
			end
		end

		AddToggle(SectionWorld2, "Auto Dragon Trident", "Automatically farms for the Dragon Trident by completing challenges and defeating bosses.", "Auto Dragon Trident", nil, true) -- Success

		local SectionRace2 = Tabs['General']:AddLeftGroupbox('Race V.1-3')

		AddToggle(SectionRace2, "Auto Evolution Race V2", "Automatically activates Evolution for Race V2 when available.", "Auto Evolution Race V2", nil, true)
		AddToggle(SectionRace2, "Auto Evolution Race V3", "Automatically activates Evolution for Race V3 when available.", "Auto Evolution Race V3", nil, true)
	end
	if World3 then

		local SectionCount3 = Tabs['General']:AddLeftGroupbox('Misc section Farm')

		local EliteHunterCount = SectionCount3:AddLabel("Elite Hunter")

		task.spawn(function()
			while wait() do
				pcall(function()
					local Data =  game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("EliteHunter","Progress")
					EliteHunterCount:SetText("Total : "..tostring(Data))
				end)
			end
		end)

		AddToggle(SectionCount3, "Auto Elite Hunter", "Automatically farms Elite Hunter by defeating high-level enemies.", "Auto Elite Hunter", nil, true) -- Success

		local TotalMob = SectionCount3:AddLabel("Total Mob")

		task.spawn(function()
			while wait(.1) do
				pcall(function()
					local caketotal = string.match(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CakePrinceSpawner"),"%d+")
					if caketotal then
						TotalMob:SetText("🎂 Total : "..tostring(caketotal))
					else
						TotalMob:SetText("🎂 Boss : Spawned")
					end
				end)
			end
		end)

		AddToggle(SectionCount3, "Auto Cake Prince", "Automatically farms the Cake Prince by completing the necessary quests.", "Auto Cake Prince", nil, true)  -- Success


		local BoneCount = SectionCount3:AddLabel("Total Mob")

		task.spawn(function()
			while wait() do
				pcall(function()
					for i, v in pairs(game:GetService("ReplicatedStorage").Remotes['CommF_']:InvokeServer("getInventory")) do
						if v.Type == "Material" then
							if v.Name == "Bones" then
								BoneCount:SetText("🦴 Bones : "..v.Count)
							end
						end
					end
				end)
			end
		end)
		AddToggle(SectionCount3, "Auto Farm Bone", "Automatically farms Bones by defeating specific enemies and completing tasks.", "Auto Bone", nil, true)  -- Success
		AddToggle(SectionCount3, "Auto Random Bone", "Automatically farms random Bones by completing quests and defeating enemies.", "Auto Random Bone",nil,false)

		LoadFuncs['Auto Random Bone'] = function(value)
			while value do task.wait(.1)
				game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Bones", "Buy", 1, 1)
			end
		end

		local SectionWorld3 = Tabs['General']:AddLeftGroupbox('Misc Of World 3')

		AddToggle(SectionWorld3, "Auto Serpent Bow", "Automatically farms the Serpent Bow by defeating the necessary bosses.", "Island Empress", nil, true) -- Success
		AddToggle(SectionWorld3, "Auto Twin hook", "Automatically farms for the Twin Hook by defeating specific bosses.", "Auto Twin hook", nil, true) -- Success
		AddToggle(SectionWorld3, "Auto Yama", "Automatically farms for the Yama sword by defeating bosses and completing quests.", "Auto Yama", nil, "AutoYama") -- Success
		AddToggle(SectionWorld3, "Auto Cavander", "Automatically farms for the Cavander weapon by completing in-game challenges.", "Auto Cavander", nil, true) -- Success
		AddToggle(SectionWorld3, "Auto Hallow Scythe", "Automatically farms for the Hallow Scythe by completing necessary tasks and defeating bosses.", "Auto Hallow Scythe", nil, true) -- Success
		AddToggle(SectionWorld3, "Auto Buddy Sword", "Automatically farms for the Buddy Sword by defeating specific enemies.", "Auto Buddy", nil, true) -- Success
		AddToggle(SectionWorld3, "Auto Tushita", "Automatically farms for the Tushita sword by defeating bosses and completing quests.", "Auto Tushita", nil, true) -- Success
		AddToggle(SectionWorld3, "Auto Dark Dagger", "Automatically farms for the Dark Dagger by completing quests and defeating enemies.", "Auto Dark Dagger", nil, true) -- Success
		AddToggle(SectionWorld3, "Auto Cursed Dual Katana", "Automatically farms for the Cursed Dual Katana by defeating bosses and completing in-game tasks.", "Auto Cursed Dual Katana", nil, true) -- Success
	end

end


do -- RightGroupBox Tabs['General']

	local Select_Weapon = RightGroupBox:AddDropdown("Select Weapon", {
		Text = "Select Weapon",
		Values = {"Melee", "Sword", "Gun", "Fruit"},
		Multi = false,
		Default = "Melee",
		Callback = function(Value)
			print('[cb] Dropdown got changed. New value:', Value)
		end
	})

	Select_Weapon:OnChanged(function()
		_G.Select_Weapon = Select_Weapon.Value
	end)

	-- [ Select Weapon ] 
	task.spawn(function()
		while wait() do
			pcall(function()
				if _G.Select_Weapon == "Melee" then
					for i ,v in pairs(LocalPlayer.Backpack:GetChildren()) do
						if v.ToolTip == "Melee" then
							if LocalPlayer.Backpack:FindFirstChild(tostring(v.Name)) then
								_G.Select_Weapon = v.Name
							end
						end
					end
				elseif _G.Select_Weapon == "Sword" then
					for i ,v in pairs(LocalPlayer.Backpack:GetChildren()) do
						if v.ToolTip == "Sword" then
							if LocalPlayer.Backpack:FindFirstChild(tostring(v.Name)) then
								_G.Select_Weapon = v.Name
							end
						end
					end
				elseif _G.Select_Weapon == "Gun" then
					for i ,v in pairs(LocalPlayer.Backpack:GetChildren()) do
						if v.ToolTip == "Gun" then
							if LocalPlayer.Backpack:FindFirstChild(tostring(v.Name)) then
								_G.Select_Weapon = v.Name
							end
						end
					end
				elseif _G.Select_Weapon == "Fruit" then
					for i ,v in pairs(LocalPlayer.Backpack:GetChildren()) do
						if v.ToolTip == "Blox Fruit" then
							if LocalPlayer.Backpack:FindFirstChild(tostring(v.Name)) then
								_G.Select_Weapon = v.Name
							end
						end
					end
				elseif _G.Select_Weapon == nil then
					for i ,v in pairs(LocalPlayer.Backpack:GetChildren()) do
						if v.ToolTip == "Melee" then
							if LocalPlayer.Backpack:FindFirstChild(tostring(v.Name)) then
								_G.Select_Weapon = v.Name
							end
						end
					end
				end
			end)
		end
	end)

	local x2Code = {
		"EXP_5B", "CONTROL",
		"UPDATE11", "XMASEXP",
		"1BILLION", "ShutDownFix2",
		"UPD14", "STRAWHATMAINE",
		"TantaiGaming", "Colosseum",
		"Axiore", "Sub2Daigrock",
		"Sky Island 3", "Sub2OfficialNoobie",
		"SUB2NOOBMASTER123", "THEGREATACE",
		"Fountain City", "BIGNEWS",
		"FUDD10", "SUB2GAMERROBOT_EXP1",
		"UPD15", "2BILLION",
		"UPD16", "3BVISITS",
		"fudd10_v2", "Starcodeheo",
		"Magicbus", "JCWK",
		"Bluxxy", "Sub2Fer999", "Enyu_is_Pro"
	}
	RightGroupBox:AddButton({
		Text = 'Redeem Code X2',
		Func = function()
			for i,v in pairs(x2Code) do game:GetService("ReplicatedStorage").Remotes.Redeem:InvokeServer(v) end
		end,
		DoubleClick = false,
		Tooltip = 'Redeem your codes to gain double rewards instantly!'
	})

	_G['Fast Attack'] = true
	AddToggle(RightGroupBox, "Fast Attack", "Increases your attack speed when enabled.", "Fast Attack", false, false)
	
	local env = (getgenv or getrenv or getfenv)()
	local rs = game:GetService("ReplicatedStorage")
	local players = game:GetService("Players")
	local client = players.LocalPlayer
	local modules = rs:WaitForChild("Modules")
	local net = modules:WaitForChild("Net")
	local charFolder = workspace:WaitForChild("Characters")
	local enemyFolder = workspace:WaitForChild("Enemies")

	local CachedChars = {}

	local Settings = {
		ClickDelay = 0.000000000000001,
		AutoClick = true
	}

	Module.FastAttack = (function()
		if not _G['Fast Attack'] then return end
		if env._trash_attack then return env._trash_attack end

		local AttackModule = {
			NextAttack = 0,
			Distance = 50,
			attackMobs = true,
			attackPlayers = true
		}

		local RegisterAttack = net:WaitForChild("RE/RegisterAttack")
		local RegisterHit = net:WaitForChild("RE/RegisterHit")

		function AttackModule:AttackEnemy(EnemyHead, Table)
			if EnemyHead and client:DistanceFromCharacter(EnemyHead.Position) < self.Distance then
				if not self.FirstAttack then
					RegisterAttack:FireServer(Settings.ClickDelay or 0.125)
					self.FirstAttack = true
				end
				RegisterHit:FireServer(EnemyHead, Table or {})
			end
		end

		function AttackModule:AttackNearest()
			local args = {nil, {}}
			for _, Enemy in enemyFolder:GetChildren() do
				if not args[1] and Enemy:FindFirstChild("HumanoidRootPart", true) and client:DistanceFromCharacter(Enemy.HumanoidRootPart.Position) < self.Distance then
					args[1] = Enemy:FindFirstChild("UpperTorso")
				elseif Enemy:FindFirstChild("HumanoidRootPart", true) and client:DistanceFromCharacter(Enemy.HumanoidRootPart.Position) < self.Distance then
					table.insert(args[2], {
						[1] = Enemy,
						[2] = Enemy:FindFirstChild("UpperTorso")
					})
				end
			end

			self:AttackEnemy(unpack(args))

			for _, Enemy in charFolder:GetChildren() do
				if Enemy ~= client.Character then
					self:AttackEnemy(Enemy:FindFirstChild("UpperTorso"))
				end
			end

			if not self.FirstAttack then
				task.wait(0.5)
			end
		end

		function AttackModule:BladeHits()
			self:AttackNearest()
			self.FirstAttack = false
		end

		task.spawn(function()
			while task.wait(Settings.ClickDelay or 0.125) do
				if (tick() - Module.AttackCooldown) >= 0.483 
					and Settings.AutoClick 
					and Module.IsAlive(client.Character) 
					and client.Character:FindFirstChildOfClass("Tool") then

					AttackModule:BladeHits()
				end
			end
		end)

		env._trash_attack = AttackModule
		return AttackModule
	end)()
	
	_G['Bypass Tp'] = true
	AddToggle(RightGroupBox, "Bypass Tp", "", "Bypass Tp", false, false)


	AddToggle(RightGroupBox, "Disables Notification", "Enables/disables the Notification and adjusts the FPS cap.", "Disables Notification", false, false)

	LoadFuncs['Disables Notification'] = function(value)
		if value then LocalPlayer.PlayerGui.Notifications.Enabled = false else LocalPlayer.PlayerGui.Notifications.Enabled = true end
	end

	AddToggle(RightGroupBox, "White Screen", "Enables/disables the white screen effect and adjusts the FPS cap.", "White Screen", false, false)

	LoadFuncs['White Screen'] = function(value)
		if value == false then setfpscap(30) RunService:Set3dRenderingEnabled(true) else setfpscap(120) RunService:Set3dRenderingEnabled(false) end
	end

	_G['Auto Haki'] = true
	AddToggle(RightGroupBox, "Auto Haki", "Automatically activates Busoshoku Haki (Armor) when available.", "Auto Haki", function(value)
		_G['Auto Haki'] = value
	end)

	_G['Auto Set Spawn Point'] = true
	AddToggle(RightGroupBox, "Auto Set Spawn Point", "Automatically Set Spawn Point Other", "Auto Set Spawn Point", function(value)
		_G['Auto Set Spawn Point'] = value
	end)

	spawn(function()
		while _G['Auto Set Spawn Point'] do task.wait(.1)
			pcall(function()
				local args = {
					[1] = "SetSpawnPoint"
				}
				game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
			end)
		end
	end)

	spawn(function()
		while _G['Auto Haki'] do task.wait(.1)
			if not LocalPlayer.Character:FindFirstChild("HasBuso") then
				game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Buso")
			end
		end
	end)

	local RightGroupBox_Stats = Tabs['General']:AddRightGroupbox('Stats Player')

	AddToggle(RightGroupBox_Stats, "Auto Stats Melee", "Automatically invests stats into Melee when enabled.", "Auto Stats Melee", nil)
	AddToggle(RightGroupBox_Stats, "Auto Stats Defense", "Automatically invests stats into Defense when enabled.", "Auto Stats Defense", nil)
	AddToggle(RightGroupBox_Stats, "Auto Stats Sword", "Automatically invests stats into Sword when enabled.", "Auto Stats Sword", nil)
	AddToggle(RightGroupBox_Stats, "Auto Stats Gun", "Automatically invests stats into Gun when enabled.", "Auto Stats Gun", nil)
	AddToggle(RightGroupBox_Stats, "Auto Stats Fruit", "Automatically invests stats into Fruit when enabled.", "Auto Stats Fruit", nil)

	spawn(function()
		while task.wait() do
			local stats = {
				["Melee"] = _G['Auto Stats Melee'], ["Defense"] = _G['Auto Stats Defense'],
				["Sword"] = _G['Auto Stats Sword'], ["Gun"] = _G['Auto Stats Gun'], ["Demon Fruit"] = _G['Auto Stats Fruit']
			}

			for stat, enabled in pairs(stats) do
				if enabled then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AddPoint",stat,3)
				end
			end
		end
	end)

end

LeftGroupBox_Teleport:AddLabel("Section World")

AddButton(LeftGroupBox_Teleport,'Teleport To First Sea','Teleport to the First Sea.',function()
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelMain")
end)

AddButton(LeftGroupBox_Teleport,'Teleport To Second Sea','Teleport to the Second Sea (Dressrosa).',function()
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelDressrosa")
end)

AddButton(LeftGroupBox_Teleport,'Teleport To Third Sea','Teleport to the Third Sea (Zou).',function()
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelZou")
end)

Location = {}
for i,v in pairs(workspace.Map:GetChildren()) do
	table.insert(Location, v.Name)
end

local Select_Location = LeftGroupBox_Teleport:AddDropdown("Select Location", {
	Text = "Select Location",
	Values = Location,
	Multi = false,
	Default = Location[1],
	Callback = function(Value)
		print("Selected Location: " .. Value)
	end
})

Select_Location:OnChanged(function()
	_G['Select Island'] = Select_Location.Value
end)

AddToggle(LeftGroupBox_Teleport, "Teleport To Island", "Automatically teleports you to the specified island when activated.", "Teleport To Island", nil, true)

LoadFuncs['Teleport To Island'] = function(condition)
	while condition do task.wait(.1)
		local TargetTeleport
		pcall(function()
			for i,v in pairs(workspace.Map:GetChildren()) do
				if v.Name == _G['Select Island'] then
					TargetTeleport = v.WorldPivot
					break
				end
			end
		end)
		Teleport(TargetTeleport * CFrame.new(0, 200, 0), function() return not condition end)
	end
end

_G['Select Chip'] = ""
Raidslist = {}
RaidsModule = require(game.ReplicatedStorage.Raids)

for i,v in pairs(RaidsModule.raids) do
	table.insert(Raidslist,v)
end

for i,v in pairs(RaidsModule.advancedRaids) do
	table.insert(Raidslist,v)
end

local Select_Chip = RightGroupBox_Teleport:AddDropdown("Select Chip", {
	Text = "Select Chip",
	Values = Raidslist,
	Multi = false,
	Default = Raidslist[1],
	Callback = function(Value)
		_G['Select Chip'] = Value
		print("Selected Chip: " .. Value)
	end
})

AddToggle(RightGroupBox_Teleport,"Auto Start Raid",'Start Raid Automatically',"Auto Start Raid",nil)
AddToggle(RightGroupBox_Teleport,"Auto Clear Raid",'Auto Clear Raid Automatically',"Auto Clear Raid",nil,true)
AddToggle(RightGroupBox_Teleport,"Kill Aura","Force NPC to dead state","Kill Aura",nil)
AddToggle(RightGroupBox_Teleport,"Auto Awaken","Auto Awake Fruit","Auto Awaken",nil)



-- [Shop]

RightGroupBox_Shop:AddLabel("Combat")

-- Black Leg

AddButton(RightGroupBox_Shop,'Black Leg','A powerful fighting style that focuses on powerful kicks.',function()
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyBlackLeg")
end)

-- Electro

AddButton(RightGroupBox_Shop,'Electro','A special fighting style involving electric power.',function()
	game:GetService("ReplicatedStorage").Remotes.CommF:InvokeServer("BuyElectro")
end)

-- Fishman Karate

AddButton(RightGroupBox_Shop,'Fishman Karate','A unique martial art used by the Fishmen to utilize the power of the ocean.',function()
	game:GetService("ReplicatedStorage").Remotes.CommF:InvokeServer("BuyFishmanKarate")
end)

-- Dragon Claw
AddButton(RightGroupBox_Shop,'Dragon Claw','A fierce fighting style with powerful claw-based attacks.',function()
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward","DragonClaw","1")
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward","DragonClaw","2")
end)

-- Super Human
AddButton(RightGroupBox_Shop,'Super Human','A powerful and balanced fighting style with enhanced strength.',function()
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySuperhuman")
end)

-- Death Step
AddButton(RightGroupBox_Shop,'Death Step','A powerful martial art that allows you to use fire-based attacks.',function()
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyDeathStep")
end)

-- Electric Claw
AddButton(RightGroupBox_Shop,'Electric Claw','A powerful electric-based fighting style focused on claw strikes.',function()
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyElectricClaw",true)
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyElectricClaw")
end)

-- Dragon Talon

AddButton(RightGroupBox_Shop,'Dragon Talon','A powerful fighting style focused on devastating talon attacks.',function()
	game:GetService("ReplicatedStorage").Remotes.CommF:InvokeServer("BuyDragonTalon",true)
	game:GetService("ReplicatedStorage").Remotes.CommF:InvokeServer("BuyDragonTalon")
end)

-- God Human

AddButton(RightGroupBox_Shop,'God Human','A powerful fighting style focused on devastating talon attacks.',function()
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyGodhuman",true)
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyGodhuman")
end)


-- Katana

LeftGroupBox_Shop:AddLabel("Sword")

AddButton(LeftGroupBox_Shop,'Katana','A sharp and precise sword known for its cutting power.',function()
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyItem","Katana")
end)

AddButton(LeftGroupBox_Shop,'Cutlass','A versatile sword with good speed and strength.',function()
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyItem","Cutlass")
end)

-- Duel Katana

AddButton(LeftGroupBox_Shop,'Duel Katana','A dual-wielding sword style for rapid attacks.',function()
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyItem","Duel Katana")
end)

AddButton(LeftGroupBox_Shop,'Iron Mace','A heavy and powerful mace for crushing blows.',function()
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyItem","Iron Mace")
end)

-- Iron Mace

AddButton(LeftGroupBox_Shop,'Pipe','A simple but effective blunt weapon.',function()
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyItem","Iron Mace")
end)

-- Triple Katana
AddButton(LeftGroupBox_Shop,'Triple Katana','A sword style with three blades for rapid slashing.',function()
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyItem","Triple Katana")
end)

-- Dual-Headed Blade

AddButton(LeftGroupBox_Shop,'Dual-Headed','A unique sword with two powerful heads.',function()
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyItem","Dual-Headed Blade")
end)

-- Bisento
AddButton(LeftGroupBox_Shop,'Bisento','A large, heavy polearm used for powerful strikes.',function()
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyItem","Bisento")
end)

-- Soul Cane
AddButton(LeftGroupBox_Shop,'Soul Cane','A mystical cane with powerful spiritual abilities.',function()
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyItem","Soul Cane")
end)

-- Slingshot
RightGroupBox_Shop:AddLabel("Gun")

AddButton(RightGroupBox_Shop,'Slingshot','A ranged weapon that uses slingshots to fire projectiles.',function()
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyItem","Slingshot")
end)

-- Musket
AddButton(RightGroupBox_Shop,'Musket','A powerful long-range firearm with a slow reload.',function()
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyItem","Musket")
end)

-- Flintlock
AddButton(RightGroupBox_Shop,'Flintlock','A fast-firing firearm that is effective at close range.',function()
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyItem","Flintlock")
end)

-- Refined Flintlock

AddButton(RightGroupBox_Shop,'Dual Flintlock (New Script)','An upgraded version of the Flintlock with improved firing speed.',function()
	game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("BuyItem","Dual Flintlock")
end)

-- Cannon

AddButton(RightGroupBox_Shop,'Cannon','A heavy artillery weapon for long-range explosions.',function()
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyItem","Cannon")
end)

-- Kabucha

AddButton(RightGroupBox_Shop,'Kabucha','A special item you can acquire as part of Blackbeard rewards.',function()
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward","Slingshot","1")
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward","Slingshot","2")
end)

-- [Misc] ----

AddButton(LeftGroupBox_Misc,'Rejoin Server','Reconnect to the same server you are currently in.',function()
	local ts = game:GetService("TeleportService")
	local p = game:GetService("Players").LocalPlayer
	ts:Teleport(game.PlaceId, p)
end)

AddButton(LeftGroupBox_Misc,'Hop Server','Switch to a different server in the same game.',function()
	ServerHop()
end)

AddButton(LeftGroupBox_Misc,'FPS Booster','Improve your gameplay by boosting your FPS.',function()
	FPSBooster()
end)


local LeftGroupBox_Misc_Team = Tabs['Misc']:AddRightGroupbox('Team')

AddButton(LeftGroupBox_Misc_Team,'Join Pirate Team','',function()
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetTeam","Pirates") 
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BartiloQuestProgress")
end)

AddButton(LeftGroupBox_Misc_Team,'Join Marin Team','',function()
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetTeam","Marines") 
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BartiloQuestProgress")
end)


local LeftGroupBox_Misc_Reward = Tabs['Misc']:AddLeftGroupbox('Reward')

AddButton(LeftGroupBox_Misc_Reward,'Refund Stat','',function()
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward","Refund","1")
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward","Refund","2")
end)

AddButton(LeftGroupBox_Misc_Reward,'Reroll Race','',function()
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward","Reroll","1")
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward","Reroll","2")
end)


local LeftGroupBox_Misc_Title = Tabs['Misc']:AddRightGroupbox('Title')

AddButton(LeftGroupBox_Misc_Title,'Title Name','',function()
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getTitles")
	game.Players.localPlayer.PlayerGui.Main.Titles.Visible = true
end)

AddButton(LeftGroupBox_Misc_Title,'Color Haki','',function()
	game.Players.localPlayer.PlayerGui.Main.Colors.Visible = true
end)


ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({ 'MenuKeybind' })

ThemeManager:SetFolder('MyScriptHub')
SaveManager:SetFolder('MyScriptHub/specific-game')
SaveManager:BuildConfigSection(Tabs['UI Settings'])
ThemeManager:ApplyToTab(Tabs['UI Settings'])
SaveManager:LoadAutoloadConfig()
